<script setup>
definePageMeta({
  layout: false,
  middleware: 'admin-auth'
})

// Import the admin store
const adminStore = useAdminStore()
const router = useRouter()

// Form data
const form = ref({
  name: '',
  email: '',
  password: '',
  status: 'approved',
  contactPerson: {
    name: '',
    position: '',
    phone: ''
  },
  companyDetails: {
    industry: '',
    size: '',
    website: '',
    description: ''
  },
  subscription: {
    plan: 'basic',
    status: 'active',
    jobPostsLimit: 5
  }
})

// Form state
const loading = ref(false)
const errors = ref({})
  
// Form validation
const validateForm = () => {
  const newErrors = {}

  // Required fields validation
  if (!form.value.name.trim()) {
    newErrors.name = 'Company name is required'
  }
  
  if (!form.value.email.trim()) {
    newErrors.email = 'Email is required'
  } else if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(form.value.email)) {
    newErrors.email = 'Please enter a valid email address'
  }
  
  if (!form.value.password.trim()) {
    newErrors.password = 'Password is required'
  } else if (form.value.password.length < 6) {
    newErrors.password = 'Password must be at least 6 characters'
  }
  
  if (!form.value.contactPerson.name.trim()) {
    newErrors['contactPerson.name'] = 'Contact person name is required'
  }
  
  if (!form.value.contactPerson.position.trim()) {
    newErrors['contactPerson.position'] = 'Contact person position is required'
  }
  
  if (!form.value.contactPerson.phone.trim()) {
    newErrors['contactPerson.phone'] = 'Contact person phone is required'
  }
  
  if (!form.value.companyDetails.industry) {
    newErrors['companyDetails.industry'] = 'Industry is required'
  }
  
  if (!form.value.companyDetails.size) {
    newErrors['companyDetails.size'] = 'Company size is required'
  }
  
  errors.value = newErrors
  return Object.keys(newErrors).length === 0
}

// Submit form
const submitForm = async () => {
  if (!validateForm()) {
    return
  }
  
  loading.value = true
  
  try {
    // Use the admin store method to create company
    const response = await adminStore.createCompany(form.value)
    
    if (response.success) {
      // Show success message and redirect
      await navigateTo('/admin/companies')
    }
  } catch (error) {
    console.error('Error creating company:', error)
    
    // Handle validation errors from server
    if (error.data?.errors) {
      errors.value = error.data.errors
    } else {
      // Show general error message
      alert(error.data?.message || 'Failed to create company')
    }
  } finally {
    loading.value = false
  }
}
</script>

<template>
  <div class="min-h-screen bg-gray-50">
    <!-- Header -->
    <div class="bg-white shadow">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center py-6">
          <div class="flex items-center">
            <button
              @click="$router.back()"
              class="mr-4 p-2 text-gray-400 hover:text-gray-600"
            >
              <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
              </svg>
            </button>
            <h1 class="text-2xl font-bold text-gray-900">Add New Company</h1>
          </div>
        </div>
      </div>
    </div>

    <!-- Form -->
    <div class="max-w-4xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
      <div class="bg-white shadow rounded-lg">
        <form @submit.prevent="submitForm" class="p-6 space-y-6">
          <!-- Basic Information -->
          <div>
            <h3 class="text-lg font-medium text-gray-900 mb-4">Basic Information</h3>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">
                  Company Name *
                </label>
                <input
                  v-model="form.name"
                  type="text"
                  class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                  :class="{ 'border-red-500': errors.name }"
                  placeholder="Enter company name"
                />
                <p v-if="errors.name" class="mt-1 text-sm text-red-600">{{ errors.name }}</p>
              </div>
              
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">
                  Email *
                </label>
                <input
                  v-model="form.email"
                  type="email"
                  class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                  :class="{ 'border-red-500': errors.email }"
                  placeholder="company@example.com"
                />
                <p v-if="errors.email" class="mt-1 text-sm text-red-600">{{ errors.email }}</p>
              </div>
              
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">
                  Password *
                </label>
                <input
                  v-model="form.password"
                  type="password"
                  class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                  :class="{ 'border-red-500': errors.password }"
                  placeholder="Enter password"
                />
                <p v-if="errors.password" class="mt-1 text-sm text-red-600">{{ errors.password }}</p>
              </div>
              
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">
                  Status
                </label>
                <select
                  v-model="form.status"
                  class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                >
                  <option value="pending">Pending</option>
                  <option value="approved">Approved</option>
                  <option value="rejected">Rejected</option>
                </select>
              </div>
            </div>
          </div>

          <!-- Contact Person -->
          <div>
            <h3 class="text-lg font-medium text-gray-900 mb-4">Contact Person</h3>
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">
                  Name *
                </label>
                <input
                  v-model="form.contactPerson.name"
                  type="text"
                  class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                  :class="{ 'border-red-500': errors['contactPerson.name'] }"
                  placeholder="Contact person name"
                />
                <p v-if="errors['contactPerson.name']" class="mt-1 text-sm text-red-600">{{ errors['contactPerson.name'] }}</p>
              </div>
              
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">
                  Position *
                </label>
                <input
                  v-model="form.contactPerson.position"
                  type="text"
                  class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                  :class="{ 'border-red-500': errors['contactPerson.position'] }"
                  placeholder="Position/Title"
                />
                <p v-if="errors['contactPerson.position']" class="mt-1 text-sm text-red-600">{{ errors['contactPerson.position'] }}</p>
              </div>
              
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">
                  Phone *
                </label>
                <input
                  v-model="form.contactPerson.phone"
                  type="tel"
                  class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                  :class="{ 'border-red-500': errors['contactPerson.phone'] }"
                  placeholder="Phone number"
                />
                <p v-if="errors['contactPerson.phone']" class="mt-1 text-sm text-red-600">{{ errors['contactPerson.phone'] }}</p>
              </div>
            </div>
          </div>

          <!-- Company Details -->
          <div>
            <h3 class="text-lg font-medium text-gray-900 mb-4">Company Details</h3>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">
                  Industry *
                </label>
                <select
                  v-model="form.companyDetails.industry"
                  class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                >
                  <option value="">Select industry</option>
                  <option value="technology">Technology</option>
                  <option value="finance">Finance</option>
                  <option value="healthcare">Healthcare</option>
                  <option value="retail">Retail</option>
                  <option value="manufacturing">Manufacturing</option>
                  <option value="education">Education</option>
                  <option value="other">Other</option>
                </select>
                <p v-if="errors['companyDetails.industry']" class="mt-1 text-sm text-red-600">{{ errors['companyDetails.industry'] }}</p>
              </div>
              
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">
                  Size *
                </label>
                <select
                  v-model="form.companyDetails.size"
                  class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                >
                  <option value="">Select size</option>
                  <option value="small">Small (1-50 employees)</option>
                  <option value="medium">Medium (51-500 employees)</option>
                  <option value="large">Large (500+ employees)</option>
                </select>
                <p v-if="errors['companyDetails.size']" class="mt-1 text-sm text-red-600">{{ errors['companyDetails.size'] }}</p>
              </div>
              
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">
                  Website
                </label>
                <input
                  v-model="form.companyDetails.website"
                  type="url"
                  class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                  placeholder="https://www.example.com"
                />
              </div>
              
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">
                  Description
                </label>
                <textarea
                  v-model="form.companyDetails.description"
                  class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                  rows="4"
                  placeholder="Enter company description"
                ></textarea>
              </div>
            </div>
          </div>

          <!-- Subscription -->
          <div>
            <h3 class="text-lg font-medium text-gray-900 mb-4">Subscription</h3>
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">
                  Plan
                </label>
                <select
                  v-model="form.subscription.plan"
                  class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                >
                  <option value="basic">Basic</option>
                  <option value="premium">Premium</option>
                  <option value="enterprise">Enterprise</option>
                </select>
              </div>
              
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">
                  Status
                </label>
                <select
                  v-model="form.subscription.status"
                  class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                >
                  <option value="active">Active</option>
                  <option value="inactive">Inactive</option>
                </select>
              </div>
              
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">
                  Job Posts Limit
                </label>
                <input
                  v-model="form.subscription.jobPostsLimit"
                  type="number"
                  class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                  min="1"
                  placeholder="Number of job posts allowed"
                />
              </div>
            </div>
          </div>

          <!-- Submit Button -->
          <div class="flex justify-end">
            <button
              type="submit"
              class="inline-flex items-center px-4 py-2 bg-blue-500 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-blue-600 active:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-25 transition ease-in-out duration-150"
              :disabled="loading"
            >
              <span v-if="!loading">Create Company</span>
              <span v-else>Loading...</span>
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>
</template>