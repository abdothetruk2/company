<script setup>
import { ref } from 'vue'
import { useAdminStore } from '~/stores/admin'

// Prevent access if already authenticated
definePageMeta({
  layout: false,
  middleware: 'admin-guest'
})

const adminStore = useAdminStore()

const credentials = ref({
  email: 'admin',
  password: 'admin'
})

const loading = ref(false)
const error = ref('')

const fillDemoCredentials = () => {
  credentials.value = {
    email: 'admin',
    password: 'admin'
  }
}

const handleLogin = async () => {
  loading.value = true
  error.value = ''

  try {
    console.log('Attempting login with:', credentials.value)
    const response = await adminStore.login(credentials.value)
    
    console.log('Login successful:', response)
    
    if (response.success) {
      // Redirect to admin dashboard
      await navigateTo('/admin/dashboard')
    }
  } catch (err) {
    console.error('Login error:', err)
    error.value = err.data?.statusMessage || err.message || 'Login failed. Please try again.'
  } finally {
    loading.value = false
  }
}
</script>

<template>
  <div class="min-h-screen bg-gradient-to-br from-gray-900 to-gray-800 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8">
      <!-- Logo and Title -->
      <div class="text-center">
        <div class="flex items-center justify-center mb-6">
          <div class="w-16 h-16 bg-primary-500 rounded-xl flex items-center justify-center shadow-lg">
            <span class="text-white font-bold text-2xl">PG</span>
          </div>
        </div>
        <h2 class="text-3xl font-bold text-white mb-2">Admin Portal</h2>
        <p class="text-gray-400">Sign in to access the admin dashboard</p>
      </div>

      <!-- Login Form -->
      <div class="bg-white rounded-xl shadow-2xl p-8">
        <form @submit.prevent="handleLogin" class="space-y-6">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Email</label>
            <input 
              type="text" 
              v-model="credentials.email"
              class="input-field"
              placeholder="Enter admin email"
              required
            />
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Password</label>
            <input 
              type="password" 
              v-model="credentials.password"
              class="input-field"
              placeholder="Enter admin password"
              required
            />
          </div>

          <div v-if="error" class="bg-red-50 border border-red-200 rounded-lg p-3">
            <p class="text-red-700 text-sm">{{ error }}</p>
          </div>

          <button 
            type="submit" 
            :disabled="loading"
            class="w-full bg-primary-500 hover:bg-primary-600 text-white font-semibold py-3 px-4 rounded-lg transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed"
          >
            {{ loading ? 'Signing in...' : 'Sign In' }}
          </button>
        </form>

        <!-- Demo Credentials -->
        <div class="mt-6 p-4 bg-gray-50 rounded-lg">
          <p class="text-sm text-gray-600 mb-2">Demo Credentials:</p>
          <p class="text-xs text-gray-500">Email: admin</p>
          <p class="text-xs text-gray-500">Password: admin</p>
          <button 
            @click="fillDemoCredentials"
            class="mt-2 text-xs text-blue-600 hover:text-blue-800 underline"
          >
            Fill demo credentials
          </button>
        </div>
      </div>
    </div>
  </div>
</template>

<style scoped>
.input-field {
  @apply w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500;
}
</style>